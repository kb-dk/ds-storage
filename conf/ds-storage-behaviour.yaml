#
# This config contains environment-data: Servers, usernames, passwords etc.
# If will be automatically merged with the core config when accesses through the application config system.
#
# The environment config is normally controlled by operations and is not part of the code repository.
#


# updateStrategy must match enums defined in open API
# Origin names must match regexp: a-z][0-9][.]
origins:
  - name: ds.tv
    updateStrategy: ALL
  - name: ds.radio
    updateStrategy: ALL
  - name: ds.radiotv6
    updateStrategy: ALL
  - name: doms.radio
    updateStrategy: CHILD
  - name: doms.aviser
    updateStrategy: PARENT
  - name: origin.strategy.none
    updateStrategy: NONE
  - name: origin.strategy.all
    updateStrategy: ALL
  - name: origin.strategy.child
    updateStrategy: CHILD
  - name: origin.strategy.parent
    updateStrategy: PARENT
  - name: ds.radiotv
    updateStrategy: ALL
  - name: ds.radiotv6
    updateStrategy: ALL
  - name : ds.samlingsbilleder
    updateStrategy: NONE
  - name : ds.maps
    updateStrategy: NONE
  - name : kb.manus.vmanus.ha
    updateStrategy: NONE


db:
  # In production this will always be PostgreSQL
  # Only use H2 for smaller-scale (a million records max) test setups
  url: jdbc:h2:${env:TMPDIR:-/tmp}/h2_ds_storage;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE
  # url: jdbc:h2:/home/XXX/workspace/ds-storage/target/h2/ds_storage;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE
  driver: org.h2.Driver
  username: ''
  password: ''

  # Example for postgres
  #url: jdbc:postgresql://localhost:5432/ds-storage
  #driver: org.postgresql.Driver
  #username: username
  #password: password

# Values in the openapi part of the configuration are expected to be overwritten with the actual values used for deployment.
# These values are used to populate the OpenAPI specification without redeploying the service. They can be served by using the syntax ${config:yaml.path}.
openapi:
  serverurl: http://localhost:9072/ds-storage/v1


